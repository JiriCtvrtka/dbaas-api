// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller/xtra_db_cluster_backup_api.proto

package controllerv1beta1

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListXtraDBClusterBackupsRequest struct {
	// Kubernetes auth.
	KubeAuth             *KubeAuth `protobuf:"bytes,1,opt,name=kube_auth,json=kubeAuth,proto3" json:"kube_auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListXtraDBClusterBackupsRequest) Reset()         { *m = ListXtraDBClusterBackupsRequest{} }
func (m *ListXtraDBClusterBackupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListXtraDBClusterBackupsRequest) ProtoMessage()    {}
func (*ListXtraDBClusterBackupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{0}
}

func (m *ListXtraDBClusterBackupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListXtraDBClusterBackupsRequest.Unmarshal(m, b)
}
func (m *ListXtraDBClusterBackupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListXtraDBClusterBackupsRequest.Marshal(b, m, deterministic)
}
func (m *ListXtraDBClusterBackupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListXtraDBClusterBackupsRequest.Merge(m, src)
}
func (m *ListXtraDBClusterBackupsRequest) XXX_Size() int {
	return xxx_messageInfo_ListXtraDBClusterBackupsRequest.Size(m)
}
func (m *ListXtraDBClusterBackupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListXtraDBClusterBackupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListXtraDBClusterBackupsRequest proto.InternalMessageInfo

func (m *ListXtraDBClusterBackupsRequest) GetKubeAuth() *KubeAuth {
	if m != nil {
		return m.KubeAuth
	}
	return nil
}

type ListXtraDBClusterBackupsResponse struct {
	// Backups.
	Backups              []*ListXtraDBClusterBackupsResponse_Backup `protobuf:"bytes,1,rep,name=backups,proto3" json:"backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *ListXtraDBClusterBackupsResponse) Reset()         { *m = ListXtraDBClusterBackupsResponse{} }
func (m *ListXtraDBClusterBackupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListXtraDBClusterBackupsResponse) ProtoMessage()    {}
func (*ListXtraDBClusterBackupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{1}
}

func (m *ListXtraDBClusterBackupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListXtraDBClusterBackupsResponse.Unmarshal(m, b)
}
func (m *ListXtraDBClusterBackupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListXtraDBClusterBackupsResponse.Marshal(b, m, deterministic)
}
func (m *ListXtraDBClusterBackupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListXtraDBClusterBackupsResponse.Merge(m, src)
}
func (m *ListXtraDBClusterBackupsResponse) XXX_Size() int {
	return xxx_messageInfo_ListXtraDBClusterBackupsResponse.Size(m)
}
func (m *ListXtraDBClusterBackupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListXtraDBClusterBackupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListXtraDBClusterBackupsResponse proto.InternalMessageInfo

func (m *ListXtraDBClusterBackupsResponse) GetBackups() []*ListXtraDBClusterBackupsResponse_Backup {
	if m != nil {
		return m.Backups
	}
	return nil
}

// Backup information.
type ListXtraDBClusterBackupsResponse_Backup struct {
	// Cluster name.
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// Backup name.
	BackupName string `protobuf:"bytes,2,opt,name=backup_name,json=backupName,proto3" json:"backup_name,omitempty"`
	// Backup state.
	State XtraDBBackupState `protobuf:"varint,3,opt,name=state,proto3,enum=percona.platform.dbaas.controller.v1beta1.XtraDBBackupState" json:"state,omitempty"`
	// Start time.
	StartTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Finish time.
	FinishTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	// Currently running operation, if any.
	Operation            *RunningOperation `protobuf:"bytes,6,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListXtraDBClusterBackupsResponse_Backup) Reset() {
	*m = ListXtraDBClusterBackupsResponse_Backup{}
}
func (m *ListXtraDBClusterBackupsResponse_Backup) String() string { return proto.CompactTextString(m) }
func (*ListXtraDBClusterBackupsResponse_Backup) ProtoMessage()    {}
func (*ListXtraDBClusterBackupsResponse_Backup) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{1, 0}
}

func (m *ListXtraDBClusterBackupsResponse_Backup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListXtraDBClusterBackupsResponse_Backup.Unmarshal(m, b)
}
func (m *ListXtraDBClusterBackupsResponse_Backup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListXtraDBClusterBackupsResponse_Backup.Marshal(b, m, deterministic)
}
func (m *ListXtraDBClusterBackupsResponse_Backup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListXtraDBClusterBackupsResponse_Backup.Merge(m, src)
}
func (m *ListXtraDBClusterBackupsResponse_Backup) XXX_Size() int {
	return xxx_messageInfo_ListXtraDBClusterBackupsResponse_Backup.Size(m)
}
func (m *ListXtraDBClusterBackupsResponse_Backup) XXX_DiscardUnknown() {
	xxx_messageInfo_ListXtraDBClusterBackupsResponse_Backup.DiscardUnknown(m)
}

var xxx_messageInfo_ListXtraDBClusterBackupsResponse_Backup proto.InternalMessageInfo

func (m *ListXtraDBClusterBackupsResponse_Backup) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ListXtraDBClusterBackupsResponse_Backup) GetBackupName() string {
	if m != nil {
		return m.BackupName
	}
	return ""
}

func (m *ListXtraDBClusterBackupsResponse_Backup) GetState() XtraDBBackupState {
	if m != nil {
		return m.State
	}
	return XtraDBBackupState_XTRA_DB_BACKUP_STATE_INVALID
}

func (m *ListXtraDBClusterBackupsResponse_Backup) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *ListXtraDBClusterBackupsResponse_Backup) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

func (m *ListXtraDBClusterBackupsResponse_Backup) GetOperation() *RunningOperation {
	if m != nil {
		return m.Operation
	}
	return nil
}

type CreateXtraDBClusterBackupRequest struct {
	// Kubernetes auth.
	KubeAuth *KubeAuth `protobuf:"bytes,1,opt,name=kube_auth,json=kubeAuth,proto3" json:"kube_auth,omitempty"`
	// Cluster name.
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// Backup name.
	BackupName           string   `protobuf:"bytes,3,opt,name=backup_name,json=backupName,proto3" json:"backup_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateXtraDBClusterBackupRequest) Reset()         { *m = CreateXtraDBClusterBackupRequest{} }
func (m *CreateXtraDBClusterBackupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateXtraDBClusterBackupRequest) ProtoMessage()    {}
func (*CreateXtraDBClusterBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{2}
}

func (m *CreateXtraDBClusterBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateXtraDBClusterBackupRequest.Unmarshal(m, b)
}
func (m *CreateXtraDBClusterBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateXtraDBClusterBackupRequest.Marshal(b, m, deterministic)
}
func (m *CreateXtraDBClusterBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateXtraDBClusterBackupRequest.Merge(m, src)
}
func (m *CreateXtraDBClusterBackupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateXtraDBClusterBackupRequest.Size(m)
}
func (m *CreateXtraDBClusterBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateXtraDBClusterBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateXtraDBClusterBackupRequest proto.InternalMessageInfo

func (m *CreateXtraDBClusterBackupRequest) GetKubeAuth() *KubeAuth {
	if m != nil {
		return m.KubeAuth
	}
	return nil
}

func (m *CreateXtraDBClusterBackupRequest) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *CreateXtraDBClusterBackupRequest) GetBackupName() string {
	if m != nil {
		return m.BackupName
	}
	return ""
}

type CreateXtraDBClusterBackupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateXtraDBClusterBackupResponse) Reset()         { *m = CreateXtraDBClusterBackupResponse{} }
func (m *CreateXtraDBClusterBackupResponse) String() string { return proto.CompactTextString(m) }
func (*CreateXtraDBClusterBackupResponse) ProtoMessage()    {}
func (*CreateXtraDBClusterBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{3}
}

func (m *CreateXtraDBClusterBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateXtraDBClusterBackupResponse.Unmarshal(m, b)
}
func (m *CreateXtraDBClusterBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateXtraDBClusterBackupResponse.Marshal(b, m, deterministic)
}
func (m *CreateXtraDBClusterBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateXtraDBClusterBackupResponse.Merge(m, src)
}
func (m *CreateXtraDBClusterBackupResponse) XXX_Size() int {
	return xxx_messageInfo_CreateXtraDBClusterBackupResponse.Size(m)
}
func (m *CreateXtraDBClusterBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateXtraDBClusterBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateXtraDBClusterBackupResponse proto.InternalMessageInfo

type DeleteXtraDBClusterBackupRequest struct {
	// Kubernetes auth.
	KubeAuth *KubeAuth `protobuf:"bytes,1,opt,name=kube_auth,json=kubeAuth,proto3" json:"kube_auth,omitempty"`
	// Backup name.
	BackupName           string   `protobuf:"bytes,2,opt,name=backup_name,json=backupName,proto3" json:"backup_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteXtraDBClusterBackupRequest) Reset()         { *m = DeleteXtraDBClusterBackupRequest{} }
func (m *DeleteXtraDBClusterBackupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteXtraDBClusterBackupRequest) ProtoMessage()    {}
func (*DeleteXtraDBClusterBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{4}
}

func (m *DeleteXtraDBClusterBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteXtraDBClusterBackupRequest.Unmarshal(m, b)
}
func (m *DeleteXtraDBClusterBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteXtraDBClusterBackupRequest.Marshal(b, m, deterministic)
}
func (m *DeleteXtraDBClusterBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteXtraDBClusterBackupRequest.Merge(m, src)
}
func (m *DeleteXtraDBClusterBackupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteXtraDBClusterBackupRequest.Size(m)
}
func (m *DeleteXtraDBClusterBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteXtraDBClusterBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteXtraDBClusterBackupRequest proto.InternalMessageInfo

func (m *DeleteXtraDBClusterBackupRequest) GetKubeAuth() *KubeAuth {
	if m != nil {
		return m.KubeAuth
	}
	return nil
}

func (m *DeleteXtraDBClusterBackupRequest) GetBackupName() string {
	if m != nil {
		return m.BackupName
	}
	return ""
}

type DeleteXtraDBClusterBackupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteXtraDBClusterBackupResponse) Reset()         { *m = DeleteXtraDBClusterBackupResponse{} }
func (m *DeleteXtraDBClusterBackupResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteXtraDBClusterBackupResponse) ProtoMessage()    {}
func (*DeleteXtraDBClusterBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e75d9bdee15d2fd, []int{5}
}

func (m *DeleteXtraDBClusterBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteXtraDBClusterBackupResponse.Unmarshal(m, b)
}
func (m *DeleteXtraDBClusterBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteXtraDBClusterBackupResponse.Marshal(b, m, deterministic)
}
func (m *DeleteXtraDBClusterBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteXtraDBClusterBackupResponse.Merge(m, src)
}
func (m *DeleteXtraDBClusterBackupResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteXtraDBClusterBackupResponse.Size(m)
}
func (m *DeleteXtraDBClusterBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteXtraDBClusterBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteXtraDBClusterBackupResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListXtraDBClusterBackupsRequest)(nil), "percona.platform.dbaas.controller.v1beta1.ListXtraDBClusterBackupsRequest")
	proto.RegisterType((*ListXtraDBClusterBackupsResponse)(nil), "percona.platform.dbaas.controller.v1beta1.ListXtraDBClusterBackupsResponse")
	proto.RegisterType((*ListXtraDBClusterBackupsResponse_Backup)(nil), "percona.platform.dbaas.controller.v1beta1.ListXtraDBClusterBackupsResponse.Backup")
	proto.RegisterType((*CreateXtraDBClusterBackupRequest)(nil), "percona.platform.dbaas.controller.v1beta1.CreateXtraDBClusterBackupRequest")
	proto.RegisterType((*CreateXtraDBClusterBackupResponse)(nil), "percona.platform.dbaas.controller.v1beta1.CreateXtraDBClusterBackupResponse")
	proto.RegisterType((*DeleteXtraDBClusterBackupRequest)(nil), "percona.platform.dbaas.controller.v1beta1.DeleteXtraDBClusterBackupRequest")
	proto.RegisterType((*DeleteXtraDBClusterBackupResponse)(nil), "percona.platform.dbaas.controller.v1beta1.DeleteXtraDBClusterBackupResponse")
}

func init() {
	proto.RegisterFile("controller/xtra_db_cluster_backup_api.proto", fileDescriptor_1e75d9bdee15d2fd)
}

var fileDescriptor_1e75d9bdee15d2fd = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xc1, 0x6e, 0xd3, 0x4a,
	0x14, 0x95, 0x93, 0x34, 0xef, 0x65, 0x82, 0x90, 0x18, 0x24, 0x30, 0xde, 0xc4, 0x0d, 0x8b, 0xa6,
	0x42, 0x1d, 0xab, 0xa9, 0x84, 0x84, 0xca, 0xa6, 0x69, 0x37, 0xd0, 0x0a, 0x90, 0x61, 0x11, 0xd8,
	0x58, 0x63, 0x67, 0x92, 0x58, 0xb1, 0x3d, 0x66, 0xe6, 0xba, 0x45, 0x62, 0xcf, 0x9f, 0xf0, 0x05,
	0x48, 0xac, 0xf9, 0x04, 0xfe, 0x00, 0x89, 0x5f, 0xe0, 0x07, 0x50, 0x66, 0x1c, 0x92, 0xa0, 0xb8,
	0xc6, 0x52, 0x10, 0x3b, 0xcf, 0xf5, 0xb9, 0xe7, 0xde, 0xe3, 0x73, 0x3c, 0xe8, 0x41, 0xc0, 0x13,
	0x10, 0x3c, 0x8a, 0x98, 0x70, 0xde, 0x81, 0xa0, 0xde, 0xc8, 0xf7, 0x82, 0x28, 0x93, 0xc0, 0x84,
	0xe7, 0xd3, 0x60, 0x96, 0xa5, 0x1e, 0x4d, 0x43, 0x92, 0x0a, 0x0e, 0x1c, 0xef, 0xa7, 0x4c, 0x04,
	0x3c, 0xa1, 0x24, 0x8d, 0x28, 0x8c, 0xb9, 0x88, 0xc9, 0xc8, 0xa7, 0x54, 0x92, 0x25, 0x07, 0xb9,
	0x3c, 0xf4, 0x19, 0xd0, 0x43, 0xeb, 0xee, 0x0a, 0x6f, 0xc0, 0xe3, 0x98, 0x27, 0x9a, 0xc3, 0xb2,
	0x8b, 0x07, 0xe6, 0x88, 0x87, 0x93, 0x10, 0xa6, 0x99, 0x4f, 0x02, 0x1e, 0x3b, 0xf1, 0x55, 0x08,
	0x33, 0x7e, 0xe5, 0x4c, 0xf8, 0x81, 0x7a, 0x79, 0x70, 0x49, 0xa3, 0x70, 0x44, 0x81, 0x0b, 0xe9,
	0xfc, 0x7a, 0xcc, 0xfb, 0x3a, 0x13, 0xce, 0x27, 0x11, 0x73, 0xd4, 0xc9, 0xcf, 0xc6, 0x0e, 0x84,
	0x31, 0x93, 0x40, 0xe3, 0x54, 0x03, 0xba, 0xef, 0x51, 0xe7, 0x22, 0x94, 0x30, 0x04, 0x41, 0xcf,
	0x06, 0xa7, 0x7a, 0xe6, 0x40, 0x69, 0x94, 0x2e, 0x7b, 0x9b, 0x31, 0x09, 0x78, 0x88, 0x5a, 0xb3,
	0xcc, 0x67, 0x1e, 0xcd, 0x60, 0x6a, 0x1a, 0xb6, 0xd1, 0x6b, 0xf7, 0x8f, 0xc8, 0x1f, 0xab, 0x26,
	0xe7, 0x99, 0xcf, 0x4e, 0x32, 0x98, 0x0e, 0x9a, 0xdf, 0xbf, 0x75, 0x6a, 0xb6, 0xe1, 0xfe, 0x3f,
	0xcb, 0x2b, 0xdd, 0x0f, 0x0d, 0x64, 0x17, 0x4f, 0x97, 0x29, 0x4f, 0x24, 0xc3, 0x11, 0xfa, 0x4f,
	0x7f, 0x74, 0x69, 0x1a, 0x76, 0xbd, 0xd7, 0xee, 0xbb, 0x15, 0x86, 0x97, 0xb1, 0x13, 0x7d, 0x76,
	0x17, 0x23, 0xac, 0x1f, 0x35, 0xd4, 0xd4, 0x35, 0xbc, 0x8b, 0x6e, 0x2c, 0x5c, 0x4f, 0x68, 0xcc,
	0x94, 0xf4, 0x96, 0xdb, 0xce, 0x6b, 0xcf, 0x68, 0xcc, 0x70, 0x07, 0xb5, 0xf3, 0x40, 0x28, 0x44,
	0x4d, 0x21, 0x90, 0x2e, 0x29, 0x80, 0x8b, 0x76, 0x24, 0x50, 0x60, 0x66, 0xdd, 0x36, 0x7a, 0x37,
	0xfb, 0x8f, 0x2b, 0xac, 0xae, 0xd7, 0xd6, 0xbb, 0xbc, 0x9c, 0x73, 0xb8, 0x9a, 0x0a, 0x3f, 0x42,
	0x48, 0x02, 0x15, 0xe0, 0xcd, 0xbd, 0x34, 0x1b, 0xca, 0x10, 0x8b, 0x68, 0xa3, 0xc9, 0xc2, 0x68,
	0xf2, 0x6a, 0x61, 0xb4, 0xdb, 0x52, 0xe8, 0xf9, 0x19, 0x1f, 0xa3, 0xf6, 0x38, 0x4c, 0x42, 0x39,
	0xd5, 0xbd, 0x3b, 0xa5, 0xbd, 0x48, 0xc3, 0x55, 0xf3, 0x6b, 0xd4, 0xe2, 0x29, 0x13, 0x14, 0x42,
	0x9e, 0x98, 0x4d, 0xd5, 0x7a, 0x5c, 0x41, 0x8f, 0x9b, 0x25, 0x49, 0x98, 0x4c, 0x9e, 0x2f, 0x28,
	0xdc, 0x25, 0x5b, 0xf7, 0xab, 0x81, 0xec, 0x53, 0xc1, 0x28, 0xb0, 0x0d, 0x66, 0xfd, 0xf5, 0x1c,
	0xe2, 0xfd, 0xdf, 0x9c, 0x56, 0x3e, 0x6a, 0xdc, 0xd0, 0x58, 0x77, 0x7c, 0x6f, 0xdd, 0xf1, 0xfa,
	0x1a, 0x72, 0xc5, 0xf9, 0xee, 0x7d, 0xb4, 0x7b, 0x8d, 0x22, 0x9d, 0xbe, 0xee, 0x47, 0x03, 0xd9,
	0x67, 0x2c, 0x62, 0xff, 0x48, 0xf7, 0xde, 0x86, 0xf8, 0x16, 0x89, 0xb9, 0x66, 0x4d, 0x2d, 0xa6,
	0xff, 0xa5, 0x81, 0xee, 0x6c, 0x78, 0x7f, 0xf2, 0xe2, 0x09, 0xfe, 0x64, 0x20, 0xb3, 0xe8, 0x57,
	0xc4, 0x4f, 0xb7, 0xf2, 0x3f, 0xab, 0x6f, 0x65, 0x9d, 0x6f, 0xf1, 0x6e, 0xc0, 0x9f, 0x0d, 0x74,
	0xaf, 0xd0, 0x43, 0x5c, 0x65, 0x54, 0x59, 0xb6, 0xad, 0x8b, 0xed, 0x90, 0xad, 0x2c, 0x5e, 0xe8,
	0x57, 0xa5, 0xc5, 0xcb, 0xc2, 0x59, 0x69, 0xf1, 0xd2, 0x08, 0x0d, 0x6e, 0xbf, 0xb9, 0xb5, 0xec,
	0xcb, 0xdb, 0xfc, 0xa6, 0xba, 0x97, 0x8e, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0xed, 0xea, 0xea,
	0x36, 0x97, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XtraDBClusterBackupAPIClient is the client API for XtraDBClusterBackupAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XtraDBClusterBackupAPIClient interface {
	// ListXtraDBClusterBackups returns a list of XtraDB clusters backups.
	ListXtraDBClusterBackups(ctx context.Context, in *ListXtraDBClusterBackupsRequest, opts ...grpc.CallOption) (*ListXtraDBClusterBackupsResponse, error)
	// CreateXtraDBClusterBackup makes a new XtraDB cluster on-demand backup.
	CreateXtraDBClusterBackup(ctx context.Context, in *CreateXtraDBClusterBackupRequest, opts ...grpc.CallOption) (*CreateXtraDBClusterBackupResponse, error)
	// DeleteXtraDBClusterBackup deletes XtraDB cluster backup.
	DeleteXtraDBClusterBackup(ctx context.Context, in *DeleteXtraDBClusterBackupRequest, opts ...grpc.CallOption) (*DeleteXtraDBClusterBackupResponse, error)
}

type xtraDBClusterBackupAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewXtraDBClusterBackupAPIClient(cc grpc.ClientConnInterface) XtraDBClusterBackupAPIClient {
	return &xtraDBClusterBackupAPIClient{cc}
}

func (c *xtraDBClusterBackupAPIClient) ListXtraDBClusterBackups(ctx context.Context, in *ListXtraDBClusterBackupsRequest, opts ...grpc.CallOption) (*ListXtraDBClusterBackupsResponse, error) {
	out := new(ListXtraDBClusterBackupsResponse)
	err := c.cc.Invoke(ctx, "/percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI/ListXtraDBClusterBackups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xtraDBClusterBackupAPIClient) CreateXtraDBClusterBackup(ctx context.Context, in *CreateXtraDBClusterBackupRequest, opts ...grpc.CallOption) (*CreateXtraDBClusterBackupResponse, error) {
	out := new(CreateXtraDBClusterBackupResponse)
	err := c.cc.Invoke(ctx, "/percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI/CreateXtraDBClusterBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xtraDBClusterBackupAPIClient) DeleteXtraDBClusterBackup(ctx context.Context, in *DeleteXtraDBClusterBackupRequest, opts ...grpc.CallOption) (*DeleteXtraDBClusterBackupResponse, error) {
	out := new(DeleteXtraDBClusterBackupResponse)
	err := c.cc.Invoke(ctx, "/percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI/DeleteXtraDBClusterBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XtraDBClusterBackupAPIServer is the server API for XtraDBClusterBackupAPI service.
type XtraDBClusterBackupAPIServer interface {
	// ListXtraDBClusterBackups returns a list of XtraDB clusters backups.
	ListXtraDBClusterBackups(context.Context, *ListXtraDBClusterBackupsRequest) (*ListXtraDBClusterBackupsResponse, error)
	// CreateXtraDBClusterBackup makes a new XtraDB cluster on-demand backup.
	CreateXtraDBClusterBackup(context.Context, *CreateXtraDBClusterBackupRequest) (*CreateXtraDBClusterBackupResponse, error)
	// DeleteXtraDBClusterBackup deletes XtraDB cluster backup.
	DeleteXtraDBClusterBackup(context.Context, *DeleteXtraDBClusterBackupRequest) (*DeleteXtraDBClusterBackupResponse, error)
}

// UnimplementedXtraDBClusterBackupAPIServer can be embedded to have forward compatible implementations.
type UnimplementedXtraDBClusterBackupAPIServer struct {
}

func (*UnimplementedXtraDBClusterBackupAPIServer) ListXtraDBClusterBackups(ctx context.Context, req *ListXtraDBClusterBackupsRequest) (*ListXtraDBClusterBackupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListXtraDBClusterBackups not implemented")
}
func (*UnimplementedXtraDBClusterBackupAPIServer) CreateXtraDBClusterBackup(ctx context.Context, req *CreateXtraDBClusterBackupRequest) (*CreateXtraDBClusterBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateXtraDBClusterBackup not implemented")
}
func (*UnimplementedXtraDBClusterBackupAPIServer) DeleteXtraDBClusterBackup(ctx context.Context, req *DeleteXtraDBClusterBackupRequest) (*DeleteXtraDBClusterBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteXtraDBClusterBackup not implemented")
}

func RegisterXtraDBClusterBackupAPIServer(s *grpc.Server, srv XtraDBClusterBackupAPIServer) {
	s.RegisterService(&_XtraDBClusterBackupAPI_serviceDesc, srv)
}

func _XtraDBClusterBackupAPI_ListXtraDBClusterBackups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListXtraDBClusterBackupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XtraDBClusterBackupAPIServer).ListXtraDBClusterBackups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI/ListXtraDBClusterBackups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XtraDBClusterBackupAPIServer).ListXtraDBClusterBackups(ctx, req.(*ListXtraDBClusterBackupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _XtraDBClusterBackupAPI_CreateXtraDBClusterBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateXtraDBClusterBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XtraDBClusterBackupAPIServer).CreateXtraDBClusterBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI/CreateXtraDBClusterBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XtraDBClusterBackupAPIServer).CreateXtraDBClusterBackup(ctx, req.(*CreateXtraDBClusterBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _XtraDBClusterBackupAPI_DeleteXtraDBClusterBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteXtraDBClusterBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XtraDBClusterBackupAPIServer).DeleteXtraDBClusterBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI/DeleteXtraDBClusterBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XtraDBClusterBackupAPIServer).DeleteXtraDBClusterBackup(ctx, req.(*DeleteXtraDBClusterBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _XtraDBClusterBackupAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "percona.platform.dbaas.controller.v1beta1.XtraDBClusterBackupAPI",
	HandlerType: (*XtraDBClusterBackupAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListXtraDBClusterBackups",
			Handler:    _XtraDBClusterBackupAPI_ListXtraDBClusterBackups_Handler,
		},
		{
			MethodName: "CreateXtraDBClusterBackup",
			Handler:    _XtraDBClusterBackupAPI_CreateXtraDBClusterBackup_Handler,
		},
		{
			MethodName: "DeleteXtraDBClusterBackup",
			Handler:    _XtraDBClusterBackupAPI_DeleteXtraDBClusterBackup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller/xtra_db_cluster_backup_api.proto",
}
