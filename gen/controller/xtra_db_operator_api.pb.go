// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller/xtra_db_operator_api.proto

package controllerv1beta1

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InstallXtraDBOperatorRequest struct {
	// Kubernetes auth.
	KubeAuth             *KubeAuth `protobuf:"bytes,1,opt,name=kube_auth,json=kubeAuth,proto3" json:"kube_auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InstallXtraDBOperatorRequest) Reset()         { *m = InstallXtraDBOperatorRequest{} }
func (m *InstallXtraDBOperatorRequest) String() string { return proto.CompactTextString(m) }
func (*InstallXtraDBOperatorRequest) ProtoMessage()    {}
func (*InstallXtraDBOperatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab2be3d77e27d2c, []int{0}
}

func (m *InstallXtraDBOperatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallXtraDBOperatorRequest.Unmarshal(m, b)
}
func (m *InstallXtraDBOperatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallXtraDBOperatorRequest.Marshal(b, m, deterministic)
}
func (m *InstallXtraDBOperatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallXtraDBOperatorRequest.Merge(m, src)
}
func (m *InstallXtraDBOperatorRequest) XXX_Size() int {
	return xxx_messageInfo_InstallXtraDBOperatorRequest.Size(m)
}
func (m *InstallXtraDBOperatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallXtraDBOperatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstallXtraDBOperatorRequest proto.InternalMessageInfo

func (m *InstallXtraDBOperatorRequest) GetKubeAuth() *KubeAuth {
	if m != nil {
		return m.KubeAuth
	}
	return nil
}

type InstallXtraDBOperatorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallXtraDBOperatorResponse) Reset()         { *m = InstallXtraDBOperatorResponse{} }
func (m *InstallXtraDBOperatorResponse) String() string { return proto.CompactTextString(m) }
func (*InstallXtraDBOperatorResponse) ProtoMessage()    {}
func (*InstallXtraDBOperatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cab2be3d77e27d2c, []int{1}
}

func (m *InstallXtraDBOperatorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallXtraDBOperatorResponse.Unmarshal(m, b)
}
func (m *InstallXtraDBOperatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallXtraDBOperatorResponse.Marshal(b, m, deterministic)
}
func (m *InstallXtraDBOperatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallXtraDBOperatorResponse.Merge(m, src)
}
func (m *InstallXtraDBOperatorResponse) XXX_Size() int {
	return xxx_messageInfo_InstallXtraDBOperatorResponse.Size(m)
}
func (m *InstallXtraDBOperatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallXtraDBOperatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstallXtraDBOperatorResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InstallXtraDBOperatorRequest)(nil), "percona.platform.dbaas.controller.v1beta1.InstallXtraDBOperatorRequest")
	proto.RegisterType((*InstallXtraDBOperatorResponse)(nil), "percona.platform.dbaas.controller.v1beta1.InstallXtraDBOperatorResponse")
}

func init() {
	proto.RegisterFile("controller/xtra_db_operator_api.proto", fileDescriptor_cab2be3d77e27d2c)
}

var fileDescriptor_cab2be3d77e27d2c = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x90, 0x4f, 0x4a, 0xc3, 0x40,
	0x14, 0xc6, 0x89, 0x8b, 0xa2, 0xe3, 0xaa, 0x11, 0x51, 0x82, 0xd2, 0x52, 0x10, 0x74, 0xd1, 0x09,
	0x6d, 0xc1, 0x7d, 0x83, 0xa0, 0xc5, 0x85, 0xd2, 0x55, 0x71, 0x13, 0xde, 0x24, 0x63, 0x13, 0x32,
	0xc9, 0x1b, 0x67, 0xde, 0xb4, 0x3d, 0x93, 0xa7, 0xf0, 0x26, 0x82, 0x27, 0x11, 0x9b, 0x60, 0x15,
	0x54, 0x14, 0x77, 0xc3, 0x7c, 0xfc, 0xbe, 0x3f, 0x8f, 0x9d, 0x24, 0x58, 0x91, 0x41, 0xa5, 0xa4,
	0x09, 0x57, 0x64, 0x20, 0x4e, 0x45, 0x8c, 0x5a, 0x1a, 0x20, 0x34, 0x31, 0xe8, 0x9c, 0x6b, 0x83,
	0x84, 0xfe, 0x99, 0x96, 0x26, 0xc1, 0x0a, 0xb8, 0x56, 0x40, 0xf7, 0x68, 0x4a, 0x9e, 0x0a, 0x00,
	0xcb, 0x37, 0x34, 0x5f, 0x0c, 0x84, 0x24, 0x18, 0x04, 0x07, 0x1f, 0x1c, 0x13, 0x2c, 0x4b, 0xac,
	0x6a, 0x8f, 0xe0, 0x7c, 0x9e, 0x53, 0xe6, 0x04, 0x4f, 0xb0, 0x0c, 0xcb, 0x65, 0x4e, 0x05, 0x2e,
	0xc3, 0x39, 0xf6, 0xd7, 0x62, 0x7f, 0x01, 0x2a, 0x4f, 0xdf, 0x42, 0x6d, 0xf8, 0xfe, 0xac, 0xb9,
	0xde, 0x8a, 0x1d, 0x4d, 0x2a, 0x4b, 0xa0, 0xd4, 0x8c, 0x0c, 0x5c, 0x44, 0x37, 0x4d, 0xbd, 0xa9,
	0x7c, 0x70, 0xd2, 0x92, 0x3f, 0x63, 0x3b, 0x85, 0x13, 0x32, 0x06, 0x47, 0xd9, 0xa1, 0xd7, 0xf5,
	0x4e, 0x77, 0x87, 0x23, 0xfe, 0xeb, 0xbe, 0xfc, 0xda, 0x09, 0x39, 0x76, 0x94, 0x45, 0xad, 0x97,
	0xe7, 0xce, 0x56, 0xd7, 0x9b, 0x6e, 0x17, 0xcd, 0x4f, 0xaf, 0xc3, 0x8e, 0xbf, 0x49, 0xb6, 0x1a,
	0x2b, 0x2b, 0x87, 0x4f, 0x1e, 0x6b, 0x7f, 0x96, 0xc6, 0xb7, 0x13, 0xff, 0xd1, 0x63, 0xfb, 0x5f,
	0x72, 0xfe, 0xe5, 0x1f, 0x7a, 0xfd, 0xb4, 0x39, 0xb8, 0xfa, 0xbf, 0x51, 0x3d, 0x21, 0xda, 0xbb,
	0x6b, 0x6f, 0x98, 0x06, 0x11, 0xad, 0xf5, 0xe5, 0x47, 0xaf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb7,
	0xc9, 0x83, 0xc6, 0x1e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XtraDBOperatorAPIClient is the client API for XtraDBOperatorAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XtraDBOperatorAPIClient interface {
	// InstallXtraDBOperator installs XtraDB operator.
	InstallXtraDBOperator(ctx context.Context, in *InstallXtraDBOperatorRequest, opts ...grpc.CallOption) (*InstallXtraDBOperatorResponse, error)
}

type xtraDBOperatorAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewXtraDBOperatorAPIClient(cc grpc.ClientConnInterface) XtraDBOperatorAPIClient {
	return &xtraDBOperatorAPIClient{cc}
}

func (c *xtraDBOperatorAPIClient) InstallXtraDBOperator(ctx context.Context, in *InstallXtraDBOperatorRequest, opts ...grpc.CallOption) (*InstallXtraDBOperatorResponse, error) {
	out := new(InstallXtraDBOperatorResponse)
	err := c.cc.Invoke(ctx, "/percona.platform.dbaas.controller.v1beta1.XtraDBOperatorAPI/InstallXtraDBOperator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XtraDBOperatorAPIServer is the server API for XtraDBOperatorAPI service.
type XtraDBOperatorAPIServer interface {
	// InstallXtraDBOperator installs XtraDB operator.
	InstallXtraDBOperator(context.Context, *InstallXtraDBOperatorRequest) (*InstallXtraDBOperatorResponse, error)
}

// UnimplementedXtraDBOperatorAPIServer can be embedded to have forward compatible implementations.
type UnimplementedXtraDBOperatorAPIServer struct {
}

func (*UnimplementedXtraDBOperatorAPIServer) InstallXtraDBOperator(ctx context.Context, req *InstallXtraDBOperatorRequest) (*InstallXtraDBOperatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallXtraDBOperator not implemented")
}

func RegisterXtraDBOperatorAPIServer(s *grpc.Server, srv XtraDBOperatorAPIServer) {
	s.RegisterService(&_XtraDBOperatorAPI_serviceDesc, srv)
}

func _XtraDBOperatorAPI_InstallXtraDBOperator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallXtraDBOperatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XtraDBOperatorAPIServer).InstallXtraDBOperator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/percona.platform.dbaas.controller.v1beta1.XtraDBOperatorAPI/InstallXtraDBOperator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XtraDBOperatorAPIServer).InstallXtraDBOperator(ctx, req.(*InstallXtraDBOperatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _XtraDBOperatorAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "percona.platform.dbaas.controller.v1beta1.XtraDBOperatorAPI",
	HandlerType: (*XtraDBOperatorAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InstallXtraDBOperator",
			Handler:    _XtraDBOperatorAPI_InstallXtraDBOperator_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller/xtra_db_operator_api.proto",
}
